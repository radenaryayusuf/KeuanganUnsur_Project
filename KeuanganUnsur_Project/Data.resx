<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bt_min.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAKBJREFUeF7t1DEKAkEMhtGB9RTiObS1Fg9stXguLfRPv+UORHkPvnZShMkAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPh39/RIT7Ws
        dnNLU5zSO33Uulc6pt1d0tZA9eucdndIdWa2BqpPa1rSFPVwXYKrWlY/f9ryAQAAAIDfNMYXmGGlbCuB
        SHAAAAAASUVORK5CYII=
</value>
  </data>
  <data name="bt_close.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAA8tJREFUeF7t3LduVEEYxXEbiQYhYcBksBANOefwADwBj0TFA9BQI8Qb0LigIpmc
        QYKGnGloEJzR3Svjj2+93nDDzPx/0mq1u9jemXMqijMGAAAAAAAAAAAAAAAAAAAAAAAAAEB3U+Pj49N6
        3lK8hHFK93NFzxPFy7SE8F/q8UeP13pNCeY6qXv52bmfGb2eLN5OhA51uXO48kEJZp3Qffww93Oh81ky
        JnSom+aQlMAP/6reX1p8nJblOtwtc9icS3Bc588m/BIlKBzTub+be0g+/NIKHXbGHD6nEmQdfinXEhzV
        ObMPv5RbCY7ofN/MebMNvxRKcNtcSoolIPx5rNRl3DGXk1IJDus8hN9DqiU4pHN8Neci/C5CCe6ay4q5
        BIQ/gEldUgolOKjvTfgDCiW4Zy4vphIc0Pf9Yr4/4fdplS7tvrnEGEpA+CMUWwn26/sR/ojFUoIQ/mfz
        PQl/REIJHpjLbVMJ9un7EH7FVutS21iCvfoen8z3IvyKhBI8NJfdZAkIvwFrdMmPzKU3UYI9+ruE35Cm
        SxDC/2j+PuHXbK0u/bEJoY4S7NbfIfyWqLsEu/T7P5i/R/gNCyV4YkKpogSE32JVl2Cnfh/ht9w6hVJF
        CUL4783vJfyWCiV4asIapgQ79POEH5n1CmkUJdiun3tnfg/hRyKU4JkJr58SEH4CNii05ybEhZRgm/7d
        W/NzhB+pfktA+AnaqBBfmFC9EmzV+4SfqF4lCOG/MZ8TfmK6leC0ngk/E5sUbjlT0+1B+ImbrwSEn4kz
        Tvi/9f6u4mOkzJtlKR+v9Pnm4p8hRd4yxy/zmhIkqtssS/jPomvmfUqQmF6zLMv0+rr5nBIkIoS/kHGG
        sGN4w/w7ShC5fmdZKEFCBt3k8RZNKUFkht3k8cYsKUEkRjXLQgkiNOpNHm/HkBK0VFWbPJQgAlXPsnhj
        lpSgJera5PF2DClBw+oeZKIELdLUIJM3ZkkJatb0IJM3ZkkJatKWQSZvzJISVKxtmzzehB0lqEhbB5ko
        QQ3aPsjk7RhSghGJZZDJ2zGkBEOKbZDJ2zGkBAMK4cc4y+JN2FGCPsU+yEQJhpDKGpc3YUcJekhtjYsS
        9CHVNS5vwo4SGKmvcXkTdpSgI5dBJm/CLvsS5LbG5U3YZVuCXAeZvAm77EqQ+xqXt16WTQmYYitkWQKm
        2ObyhquSLQFTbL48SqBDXTSHJPxZ3nDV+c5nyViiQ013Dkf4//u3BJf0enHxdlpCCc7pmfB9U7qfs3pe
        VLwEAAAAAAAAAAAAAAAAAAAAAACYz9jYX8fv1muZIcW1AAAAAElFTkSuQmCC
</value>
  </data>
</root>